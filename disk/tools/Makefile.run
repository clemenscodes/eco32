#
# Makefile to build a bootable disk, and use it in one of four ways:
#
# 1. Start the simulator with an IDE disk interface (run-sim-dsk).
#
# 2. Start the simulator with an SD card interface (run-sim-sdc).
#
# 3. Start the simulator with a 'dangling' serial line to which
#    the disk server can connect (run-sim-ser). Note that in this
#    case you must start the disk server manually with the correct
#    serial line device specified on the command line. The name of
#    this pseudoterminal is shown during startup of the simulator.
#    Let the server connect to the pseudoterminal before you start
#    running the machine monitor.
#
# 4. Start the disk server alone to make the disk available over
#    a real serial line for an FPGA board (run-server). Note that
#    in this case SER_DEV must be set to the serial line device on
#    which the disk server should wait for commands.
#

BUILD = ..

SER_DEV = /dev/ttyUSB1
DSK_IMG = disk.img
DSK_SIZ = 735M
RUN_LOG = run.log

all:		$(DSK_IMG)

run-sim-dsk:	$(DSK_IMG)
		$(BUILD)/bin/sim -i -m 32 -c -s 2 -t 0 -t 1 \
		  -r $(BUILD)/monitor/simulator/monitor.bin \
		  -d $(DSK_IMG) -o $(RUN_LOG)

run-sim-sdc:	$(DSK_IMG)
		$(BUILD)/bin/sim -i -m 32 -c -s 2 -t 0 -t 1 \
		  -r $(BUILD)/monitor/simulator/monitor.bin \
		  -D $(DSK_IMG) -o $(RUN_LOG)

run-sim-ser:	$(DSK_IMG)
		$(BUILD)/bin/sim -i -m 32 -c -s 2 -t 0 \
		  -r $(BUILD)/monitor/simulator/monitor.bin \
		  -o $(RUN_LOG)

run-server:	$(DSK_IMG)
		$(BUILD)/bin/diskserv $(SER_DEV) $(DSK_IMG)

$(DSK_IMG):
		$(BUILD)/bin/mkdisk $(DSK_IMG) $(DSK_SIZ)
		$(BUILD)/bin/mkpart $(DSK_IMG) disk.part
		$(MAKE) -C fs-EOS32 all
		$(MAKE) -C fs-NetBSD all
		$(MAKE) -C fs-Linux all

clean:
		$(MAKE) -C fs-EOS32 clean
		$(MAKE) -C fs-NetBSD clean
		$(MAKE) -C fs-Linux clean
		rm -f *~ $(DSK_IMG) $(RUN_LOG)
